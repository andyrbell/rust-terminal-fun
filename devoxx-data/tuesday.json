[{"id":26702,"fromDate":"2019-11-05T07:30:00Z","toDate":"2019-11-05T08:30:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1203,"roomName":"Exhibition Hall","sessionTypeId":1258,"sessionTypeName":"Breakfast","sessionTypeDuration":60,"sessionTypeBreak":true,"audienceLevel":null,"langName":null,"timezone":"Europe/Brussels","trackId":null,"trackName":null,"trackImageURL":null,"speakers":null,"tags":null,"talkDescription":null,"talkTitle":null,"talkId":null},{"id":111752,"fromDate":"2019-11-05T08:30:00Z","toDate":"2019-11-05T11:30:00Z","overflow":true,"reserved":false,"remark":null,"roomId":1211,"roomName":"Room 4","sessionTypeId":1256,"sessionTypeName":"Deep Dive","sessionTypeDuration":180,"sessionTypeBreak":false,"audienceLevel":null,"langName":null,"timezone":"Europe/Brussels","trackId":null,"trackName":null,"trackImageURL":null,"speakers":null,"tags":null,"talkDescription":null,"talkTitle":null,"talkId":null},{"id":26553,"fromDate":"2019-11-05T08:30:00Z","toDate":"2019-11-05T11:30:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1202,"roomName":"Room 5","sessionTypeId":1256,"sessionTypeName":"Deep Dive","sessionTypeDuration":180,"sessionTypeBreak":false,"audienceLevel":"INTERMEDIATE","langName":null,"timezone":"Europe/Brussels","trackId":"1160","trackName":"Architecture","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/17c5c96d-cbfd-42ef-b715-13f1a05c5391.png","speakers":[{"id":25751,"firstName":"Josh","lastName":"Long","company":"Pivotal"}],"tags":[{"name":"MicroServices"},{"name":"Spring Boot"},{"name":"Reactive Programming"},{"name":"Reactive Streams"}],"talkDescription":"Microservices and big-data increasingly confront us with the limitations of traditional input/output. In traditional IO, work that is IO-bound dominates threads. This wouldn't be such a big deal if we could add more threads cheaply, but threads are expensive on the JVM, and most other platforms. Even if threads were cheap and infinitely scalable, we'd still be confronted with the faulty nature of networks. Things break, and they often do so in subtle, but non-exceptional ways. Traditional approaches to integration bury the faulty nature of networks behind overly simplifying abstractions. We need something better.\n\nSpring Framework 5 introduced the Spring developer to a growing world of support for reactive programming across the Spring portfolio, starting with a new Netty-based web runtime, component model and module called Spring WebFlux, and then continuing to Spring Data Kay, Spring Security 5.0, Spring Boot 2.0 and Spring Cloud Finchley. Sure, it sounds like a lot, but don't worry! Join me, your guide, Spring developer advocate Josh Long, and we'll begin the reactive revolution together.","talkTitle":"Reactive Revolution","talkId":25802},{"id":26568,"fromDate":"2019-11-05T08:30:00Z","toDate":"2019-11-05T11:30:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1207,"roomName":"Room 6","sessionTypeId":1256,"sessionTypeName":"Deep Dive","sessionTypeDuration":180,"sessionTypeBreak":false,"audienceLevel":"ADVANCED","langName":null,"timezone":"Europe/Brussels","trackId":"1154","trackName":"Java Language","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/f63a6ff7-0b15-4feb-b0fb-06aad848e601.png","speakers":[{"id":52605,"firstName":"Jos√©","lastName":"Paumard","company":"Independant (very)"}],"tags":[{"name":"Java SE"},{"name":"Java"},{"name":"future"}],"talkDescription":"As it was announced, Java keeps releasing a major version every 6 months. The release train passes and brings its amount of new things. Some of the expected functionalities have already been released: a new syntax for the switch clause or a new bytecode instruction: CONSTANT_DYNAMIC. Other are still work in progress: a new way to write methods, a smart instanceof, lazy evaluated constants. Projects are progressing too. Loom will bring new concurrent programming paradigms. Amber is about to bring data types and new lanaguage constructs. Valhalla can already show very promising results with formerly called value types, now called inline types. It is hard to tell when all these things are released, but when they are ready, we will have them in less than 6 months! We will give details about all this, with code and live demos of preview versions. \n","talkTitle":"Java keeps throttling up!","talkId":54101},{"id":26563,"fromDate":"2019-11-05T08:30:00Z","toDate":"2019-11-05T11:30:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1201,"roomName":"Room 8","sessionTypeId":1256,"sessionTypeName":"Deep Dive","sessionTypeDuration":180,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1160","trackName":"Architecture","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/17c5c96d-cbfd-42ef-b715-13f1a05c5391.png","speakers":[{"id":106952,"firstName":"Andrew","lastName":"Dunnings","company":"IBM"},{"id":50574,"firstName":"Katherine","lastName":"Stanley","company":"IBM UK"}],"tags":[{"name":"Apache Kafka"},{"name":"Kafka"},{"name":"Apache Kafka Streams"}],"talkDescription":"This session dives deep into the architecture of Apache Kafka and how to use it in practice. Kafka offers a new take on publish/subscribe messaging that is very different from other messaging systems. But Kafka isn't just a messaging system - it's an event streaming platform. Become an expert on Kafka concepts such as topic partitioning, consumer groups and exactly-once semantics. Find out best practices for using the APIs to achieve performance and reliability. Learn about advanced concepts such as stream processing using the Kafka Streams and integrating with other services using Kafka Connect.","talkTitle":"A Deep Dive into Apache Kafka - This is Event-Streaming, Not Just Messaging","talkId":51736},{"id":26565,"fromDate":"2019-11-05T08:30:00Z","toDate":"2019-11-05T11:30:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1205,"roomName":"Room 9","sessionTypeId":1256,"sessionTypeName":"Deep Dive","sessionTypeDuration":180,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1154","trackName":"Java Language","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/f63a6ff7-0b15-4feb-b0fb-06aad848e601.png","speakers":[{"id":99501,"firstName":"Venkat","lastName":"Subramaniam","company":"Agile Developer, Inc."}],"tags":[{"name":"Java"},{"name":"Collection Framework"},{"name":"Collections features"}],"talkDescription":"One of the most intriguing classes in the JDK is the Collectors utility class, with a collection of some highly powerful functions that are useful during the reduce operation of streams. The functions that are in this class have so much to offer and yet, due to their complex nature, often are not used as much as they should be. Using well defined live coded examples, we will take up several common programming problems. Discuss them quickly and drive the implementation of these using the Collectors methods. By the end of this presentation you will know more throughly the power of Collectors and how to apply the methods in there.","talkTitle":"Exploring Collectors","talkId":100001},{"id":26891,"fromDate":"2019-11-05T08:30:00Z","toDate":"2019-11-05T11:30:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1210,"roomName":"BOF 1","sessionTypeId":1262,"sessionTypeName":"Hands-on Lab","sessionTypeDuration":180,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1159","trackName":"Cloud, Containers & Infrastructure","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/227114b5-6c72-4059-82ef-be9bf00ddd47.png","speakers":[{"id":49064,"firstName":"Ray","lastName":"Tsang","company":"Google"},{"id":45702,"firstName":"Mete","lastName":"Atamel","company":"Google"},{"id":49509,"firstName":"James","lastName":"Ward","company":"Google"}],"tags":[{"name":"Kubernetes"},{"name":"serverless"},{"name":"kNative"}],"talkDescription":"Over the past several years Google has open sourced several cloud-native technologies abstracting away more and more underlying infrastructure into well-defined processes that can work across different environments. Kubernetes and Istio provide cluster primitives for scheduling and networking. Knative is a serverless platform built on Kubernetes and Istio and higher-level deployment, serving, and eventing. In this workshop you will get hands-on with Knative, using the build, serving, and eventing pieces.  You will learn the different features of Knative by using them via Spring Boot applications & functions.","talkTitle":"Knative Workshop - Your own Platform as a Service on Kubernetes","talkId":49310},{"id":26890,"fromDate":"2019-11-05T08:30:00Z","toDate":"2019-11-05T11:30:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1206,"roomName":"BOF 2","sessionTypeId":1262,"sessionTypeName":"Hands-on Lab","sessionTypeDuration":180,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1153","trackName":"Big Data & Machine Learning","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/e80e14f1-7a23-4a6d-a955-7a653973f6eb.png","speakers":[{"id":30001,"firstName":"Nick","lastName":"Bourdakos","company":"IBM"}],"tags":[{"name":"Deep Learning"},{"name":"Computer Vision"},{"name":"TensorFlow"}],"talkDescription":"Whether you are counting cars on a road or people stranded on rooftops in a natural disaster, there are plenty of use cases for object detection. Often times, pre-trained object detection models do not suit our needs and we need to create our own custom models.\n\nHow can we utilize machine learning to train our own custom model without substantive computing power and time?\nAnswer: Watson Machine Learning.\n\nHow can we leverage our custom trained model to detect object‚Äôs, in real-time, with complete user privacy, all in the browser?\nAnswer: TensorFlow.js.\n\nIn this workshop, you will create a web app that does just that. You will learn how to create an IBM Cloud Object Storage instance to store your labeled data. Once your data is ready, you will learn how to spin up a Watson Machine Learning instance to train your own custom model on top-of-the-line GPUs. After your model has completed training, you can simply plug the TensorFlow.js model into your react application.\n\nAt the end of this workshop, you should understand how to:\n- Label data that can be used for object detection\n- Use your custom data to train a model using Watson Machine Learning\n- Detect objects with TensorFlow.js in the browser","talkTitle":"Realtime Object Detection in the Browser with Tensorflow.js","talkId":33202},{"id":26704,"fromDate":"2019-11-05T11:30:00Z","toDate":"2019-11-05T12:30:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1203,"roomName":"Exhibition Hall","sessionTypeId":26751,"sessionTypeName":"Lunch","sessionTypeDuration":60,"sessionTypeBreak":true,"audienceLevel":null,"langName":null,"timezone":"Europe/Brussels","trackId":null,"trackName":null,"trackImageURL":null,"speakers":null,"tags":null,"talkDescription":null,"talkTitle":null,"talkId":null},{"id":26562,"fromDate":"2019-11-05T12:30:00Z","toDate":"2019-11-05T15:30:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1211,"roomName":"Room 4","sessionTypeId":1256,"sessionTypeName":"Deep Dive","sessionTypeDuration":180,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1151","trackName":"Methodology & Culture","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/710ace39-49e0-4935-9734-7cda98204fa4.png","speakers":[{"id":49055,"firstName":"Victor","lastName":"Rentea","company":"Independent + IBM"}],"tags":[{"name":"coding practices"},{"name":"refactoring"},{"name":"refactoring techniques"},{"name":"livecoding session"}],"talkDescription":"Would you attach your last commit to your CV: \"Sample: how I write code\"? What do others think of your code? Writing Clean Code: an old topic, but never less important, nor challenging than today!\nDuring the first part of this deep-dive session, we will go through the essential clean code rules, learning to detect code smells, discussing refactoring ideas and alternative designs pros/cons. Then, after the break, we will apply what we learned in a refactoring live-coding kata, explaining 10 key practical techniques you can immediately apply in your code. \nBy the end of the session, you will have a clear picture of what clean code means and quite a variety of ways at hand to get there. Along the way, we will also point out the differences between procedural/oop/functional paradigms and whether they are competing or complementary, speak in detail about Extract Method, statefulness, separation by layers of abstractions, OOP, and many more.\n\nCan't wait to share my greatest passion with you: writing professional, expressive code that is a pleasure to work with.\n","talkTitle":"Clean Code - The Next Chapter","talkId":49108},{"id":26570,"fromDate":"2019-11-05T12:30:00Z","toDate":"2019-11-05T15:30:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1202,"roomName":"Room 5","sessionTypeId":1256,"sessionTypeName":"Deep Dive","sessionTypeDuration":180,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1154","trackName":"Java Language","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/f63a6ff7-0b15-4feb-b0fb-06aad848e601.png","speakers":[{"id":99501,"firstName":"Venkat","lastName":"Subramaniam","company":"Agile Developer, Inc."}],"tags":[{"name":"Java 10"},{"name":"Java9"},{"name":"Java 11"}],"talkDescription":"Java is evolving at a rapid pace. While Java 8 introduced the most significant change to the JDK and the language, each release of Java since then has added some distinctive features both to the core language and the JDK. In this session we will dive into the significant changes to Java from Java 9 to the latest version. We will take an example oriented approach to look into the features, discuss the pros and cons of using them.","talkTitle":"Java 9 and Beyond","talkId":99851},{"id":116102,"fromDate":"2019-11-05T12:30:00Z","toDate":"2019-11-05T15:30:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1207,"roomName":"Room 6","sessionTypeId":1256,"sessionTypeName":"Deep Dive","sessionTypeDuration":180,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1152","trackName":"Programming languages","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/53f80769-d8be-4ae5-a731-d5591c97d2b4.png","speakers":[{"id":24904,"firstName":"S√©bastien","lastName":"Deleuze","company":"Pivotal"}],"tags":[{"name":"coroutines"},{"name":"Spring Boot"},{"name":"Spring Framework 5"},{"name":"Reactive Programming"},{"name":"Kotlin"}],"talkDescription":"In this deepdive session, we are going to explore how to leverage Spring Reactive stack with imperative code thanks to Kotlin Coroutines and its new Flow type. We are going to build step by step a chat application with Spring Boot 2.2 in order to explore various use cases for Coroutines API:\n - Building a REST API with WebFlux\n - Rendering of templates with Thymeleaf\n - Reactive messaging with RSocket including Android and JavaScript clients\n - Requesting remote webservices including streaming one with WebClient\n - Persistence with Spring Data R2DBC (Reactive SQL)\n\nAt the end of this session, you will have a good understanding of what structured concurrency is, what makes Kotlin Flow so attractive, what are the differences between regular blocking code and Reactive code written with Coroutines, and what level of performance and scalability you can expect with this new way to consume Spring Reactive stack.","talkTitle":"Deepdive into Reactive Spring with Coroutines and Kotlin Flow","talkId":40958},{"id":26566,"fromDate":"2019-11-05T12:30:00Z","toDate":"2019-11-05T15:30:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1201,"roomName":"Room 8","sessionTypeId":1256,"sessionTypeName":"Deep Dive","sessionTypeDuration":180,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1159","trackName":"Cloud, Containers & Infrastructure","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/227114b5-6c72-4059-82ef-be9bf00ddd47.png","speakers":[{"id":39201,"firstName":"David","lastName":"Gageot","company":"Google"}],"tags":[{"name":"Kubernetes"},{"name":"Development Tools"},{"name":"Containers"}],"talkDescription":"Do you know a 10x developer? Not sure they really exist.\nHowever, it's clear that good tools help go from an idea to production much quicker.\n\nWe'll see how tools inspired by Google's internal tooling can help you develop and deploy\nto Kubernetes \"like a Googler\".\n\nCloud Code, Skaffold and Jib give you a tight feedback loop and enable continuous deployment.\nKind and Skaffold help you run integration tests on your CI/CD.\nGoogle Cloud Run and Knative help you get started without the complexity of Kubernetes while\noffering a nice migration path.","talkTitle":"Develop and Deploy to Kubernetes like a Googler","talkId":39251},{"id":26567,"fromDate":"2019-11-05T12:30:00Z","toDate":"2019-11-05T15:30:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1205,"roomName":"Room 9","sessionTypeId":1256,"sessionTypeName":"Deep Dive","sessionTypeDuration":180,"sessionTypeBreak":false,"audienceLevel":"INTERMEDIATE","langName":null,"timezone":"Europe/Brussels","trackId":"1155","trackName":"Server Side Java","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/698b503d-9578-48da-85a9-bdf8ba942e3a.png","speakers":[{"id":16853,"firstName":"Michael","lastName":"Simons","company":"Neo4j, Inc."},{"id":14704,"firstName":"Mark","lastName":"Paluch","company":"Pivotal"}],"tags":[{"name":"Reactive Programming"},{"name":"Reactive Streams"},{"name":"transactions"}],"talkDescription":"How are reactive transactions supposed to work in a non-blocking, reactive application?\n\nSpring draws with its reactive transaction manager a new, strong primitive in the picture of reactive systems. We will deeply dive into Reactive Relational Database Connectivity, the reactive specification for SQL database access and into Neo4j 4 that comes with a reactive database client.\n\nWe will walk through the access of strictly transactional data sources while embracing reactive and non-blocking properties.\nThis highly technical Deep Dive session will visit reactive patterns for potentially highly concurrent applications that are no longer opinionated about threading.\n\nCome to this session and learn how to set up and use transactions in a reactive application. We will present R2DBC and Neo4j examples and are open for questions, comments, and discussion. Bring your laptop set up with Java 8 or newer and your favorite IDE, and be prepared to think!\n","talkTitle":"Reactive Transactions Masterclass","talkId":16952},{"id":26893,"fromDate":"2019-11-05T12:30:00Z","toDate":"2019-11-05T15:30:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1210,"roomName":"BOF 1","sessionTypeId":1262,"sessionTypeName":"Hands-on Lab","sessionTypeDuration":180,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1160","trackName":"Architecture","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/17c5c96d-cbfd-42ef-b715-13f1a05c5391.png","speakers":[{"id":16152,"firstName":"Vladimir","lastName":"Dejanovic","company":"PVH"},{"id":16157,"firstName":"Thomas","lastName":"Segismont","company":"Red Hat"}],"tags":[{"name":"microservices architectures"},{"name":"GraphQL"},{"name":"API gateway"}],"talkDescription":"The API Gateway pattern is a well-known solution to the problem of clients communicating with a microservices-based application. It relieves browsers or mobile devices from sending several requests to display a single web page or screen.\n\nIn practice, the pattern is often implemented as an HTTP/JSON service. Therefore it is difficult for the web, mobile and backend developers to settle on a payload format that is both flexible and concise to suit all the different kinds of frontends.\n\nGraphQL is a query and schema definition language for your backend services. It can be used over different transports (e. g. HTTP, Websocket) and provides frontend developers with the ability to request exactly the information they need, making it a great solution to implement the API Gateway pattern.\n\nThis workshop starts with a brief introduction to GraphQL. Then you will build a gateway for a music store microservices-based application. You will learn how to fetch data from HTTP services or a Postgres database and protect users with authentication. We will focus on the use case instead of the GraphQL technology itself (there are plenty of resources for that on the web).\n\nSoftware requirements:\n\n- JDK8 or JDK11\n- Recent version of Maven\n- Recent version of Postgres database (or Docker)\n- Java IDE","talkTitle":"Implementing the API Gateway pattern with GraphQL","talkId":16407},{"id":26892,"fromDate":"2019-11-05T12:30:00Z","toDate":"2019-11-05T15:30:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1206,"roomName":"BOF 2","sessionTypeId":1262,"sessionTypeName":"Hands-on Lab","sessionTypeDuration":180,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1153","trackName":"Big Data & Machine Learning","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/e80e14f1-7a23-4a6d-a955-7a653973f6eb.png","speakers":[{"id":49062,"firstName":"Ivar","lastName":"Reukers","company":"Ordina"},{"id":49059,"firstName":"Remco","lastName":"Runge","company":"Ordina"}],"tags":[{"name":"Deep Learning"},{"name":"Machine learning"},{"name":"Artificial Intelligence"},{"name":"Computer Vision"},{"name":"DL4J"}],"talkDescription":"The Duke is well known in the Java universe. You might even have seen him flash by, Of course you would love to have a picture of the Duke, but he is rather shy. Even before the photographer can say ‚ÄòSMILE‚Äô, the Duke is already gone. We would like to help you to change this. \nWithin this HOL you will be using DL4J (Deep Learning 4 Java) to train a neural network into recognising the Duke. By using Transfer Learning, we will make sure that you can train your network within minutes. You will get a first experience in building neural networks, how you can train them and how you can improve your network. \nTo help you test your setup, all participants will be given a custom made a stuffed Duke figure. With the help of this figure you can make sure that you will be able to get a picture of the Duke the next time he flashes by. Off course you can take the Duke home to keep improving your software.\nAfter this HOL you will have learned how to use Java in combination with DL4J to build and train a deep learning network. You will be able to create your own trainings data and retrain the network to recognize anything you want. \nFor this HOL you do not need any experience with Deep Learning. Basic programming knowledge should suffice. \n","talkTitle":"Finding the Duke with DL4J (DeepLearning 4 Java)","talkId":49113},{"id":26952,"fromDate":"2019-11-05T15:30:00Z","toDate":"2019-11-05T15:45:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1203,"roomName":"Exhibition Hall","sessionTypeId":26902,"sessionTypeName":"Break","sessionTypeDuration":15,"sessionTypeBreak":true,"audienceLevel":null,"langName":null,"timezone":"Europe/Brussels","trackId":null,"trackName":null,"trackImageURL":null,"speakers":null,"tags":null,"talkDescription":null,"talkTitle":null,"talkId":null},{"id":26593,"fromDate":"2019-11-05T15:45:00Z","toDate":"2019-11-05T16:15:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1211,"roomName":"Room 4","sessionTypeId":1254,"sessionTypeName":"Tools-in-Action","sessionTypeDuration":30,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1151","trackName":"Methodology & Culture","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/710ace39-49e0-4935-9734-7cda98204fa4.png","speakers":[{"id":18653,"firstName":"Stijn","lastName":"Vanpoucke","company":"Freelance"}],"tags":[{"name":"skills"},{"name":"learning"},{"name":"Tools"}],"talkDescription":"Due the extreme amount of resources we're getting overwhelmed with blogs, articles, youtube channels, online courses, books, etc...  After this conference you'll definitely have multiple topics you want to learn more about. But distractions, information overload, work priorities and others are not helpful towards focused learning. Maybe your HR department enforces you to do a yearly reflection on what you've learned, and you'll definitely have stuff to tell, but most likely there will also be topics that you where not able to dive in to as much as you wanted. \n\nDuring the years I've combined different proven techniques like OKR's and GROW. But I always struggled to keep track of them on a daily/weekly basis. I'm not an HR guy I'm technical and I love tools. So I'm using tools to motivate myself and to get my focus back,  I'm using notion, pocket, IFTTT, Kanban boards and mind mappings, etc..  Some I failed to keep in my daily routine but others where surprisingly useful. Those are the ones I want to share with you so that you can started using them and become an even more better developer in no-time. These tools will become your personal coach. They'll help you to reason about your goals as a developer, they will help you to organise all the gathered information, they will enforce you to work on your skills on a short- and long-term basis, and they'll make sure that you spend your time more wisely. I wished that I knew about them many years ago.","talkTitle":"Productivity tools you should know about if you want to have a focused learning path","talkId":19704},{"id":26592,"fromDate":"2019-11-05T15:45:00Z","toDate":"2019-11-05T16:15:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1202,"roomName":"Room 5","sessionTypeId":1254,"sessionTypeName":"Tools-in-Action","sessionTypeDuration":30,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1156","trackName":"Security","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/fab122c4-5e16-4e83-a3da-fad00870c886.png","speakers":[{"id":50835,"firstName":"Sebastien","lastName":"Blanc","company":"Red Hat"}],"tags":[{"name":"identity"},{"name":"Quarkus"},{"name":"security"}],"talkDescription":"So you have built in no time your Quarkus application and it's supersonic subatomic fast but have you thought about security ? Right, usually this is the thing we implement at the end even if it's a crucial part of our application we often ignore  it . The good news it's that with Quarkus, adding security and identity management is a breeze.\nJoin me in this 100% live coding session where we explore the different options that Quarkus offers you to secure your applications.","talkTitle":"Secure your Quarkus Applications","talkId":51717},{"id":26591,"fromDate":"2019-11-05T15:45:00Z","toDate":"2019-11-05T16:15:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1207,"roomName":"Room 6","sessionTypeId":1254,"sessionTypeName":"Tools-in-Action","sessionTypeDuration":30,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1154","trackName":"Java Language","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/f63a6ff7-0b15-4feb-b0fb-06aad848e601.png","speakers":[{"id":41602,"firstName":"Kevin","lastName":"Rushforth","company":"Oracle"}],"tags":[{"name":"installers"},{"name":"OpenJDK"},{"name":"Development Tools"}],"talkDescription":"In JDK 14 we plan to deliver a new tool, jpackage, that will enable application developers to distribute their applications in an installable package suitable for the native platform on which it will run. Supported platforms and package formats include .exe and .msi for Windows, .dmg for macOS, and .rpm and .deb for Linux. Learn how jpackage works in conjunction with jlink to deliver a standalone application with the set of JDK modules required to run that application. We will explain how to use jpackage and give plenty of examples you can use for your application deployment needs.","talkTitle":"Java Packaging Tool: Create Native Packages to Deploy Java Applications","talkId":105501},{"id":26594,"fromDate":"2019-11-05T15:45:00Z","toDate":"2019-11-05T16:15:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1201,"roomName":"Room 8","sessionTypeId":1254,"sessionTypeName":"Tools-in-Action","sessionTypeDuration":30,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1159","trackName":"Cloud, Containers & Infrastructure","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/227114b5-6c72-4059-82ef-be9bf00ddd47.png","speakers":[{"id":45702,"firstName":"Mete","lastName":"Atamel","company":"Google"}],"tags":[{"name":"Kubernetes"},{"name":"serverless"},{"name":"Containers"},{"name":"kNative"}],"talkDescription":"The ‚Äúserverless‚Äù buzzword was popularized thanks to FaaS platforms (Function-as-a-Service). However, serverless goes beyond just functions. Even traditional Platform-as-a-Service solutions also exhibit serverless characteristics (managed infrastructure, auto-scaling capabilities, pay for usage), when they‚Äôre letting developers push their apps as the unit of deployment. \n\nSimilarly, a container is just another way to package your business logic. And that‚Äôs what Google Cloud Run is all about: you package your code in a container. You decide to use any language, runtime or library, as long as it runs in a container that can receive incoming HTTP requests. \n\nCloud Run is a fully-managed product that scales your container images from 0 to n depending on traffic, and you pay proportionally to that usage. It can also run in Google‚Äôs managed Kubernetes clusters (GKE) giving you more control on the machines running your workloads. \n\nLast but not least, you‚Äôre not tied to the Google Cloud Platform at all, as Cloud Run builds atop the Knative serverless building blocks for Kubernetes. You can also deploy and scale your containers on other cloud providers or on-premises, thanks to the openness and portability brought by Knative. \n\nAfter an overview of Cloud Run, its developer experience, we‚Äôll go through various demos to watch your serverless containers in action!","talkTitle":"Cloud Run, serverless containers in action","talkId":44163},{"id":26590,"fromDate":"2019-11-05T15:45:00Z","toDate":"2019-11-05T16:15:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1205,"roomName":"Room 9","sessionTypeId":1254,"sessionTypeName":"Tools-in-Action","sessionTypeDuration":30,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1155","trackName":"Server Side Java","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/698b503d-9578-48da-85a9-bdf8ba942e3a.png","speakers":[{"id":44101,"firstName":"Jean","lastName":"Bisutti","company":"Zenika"}],"tags":[{"name":"Spring Boot"},{"name":"Hibernate"},{"name":"Performance Issues"}],"talkDescription":"Let's suppose that you are developing a new application: How to quickly detect big performance bottlenecks? \n\nHow to easily know whether the new written code is raising many SQL requests? \n\nHow to easily spot that your application might consume a lot of memory?\n\nIn this Tools-in-Action, we will show how QuickPerf (https://github.com/quick-perf/quickperf) can help us to quickly detect some big performance bottlenecks and remove them as soon as possible.","talkTitle":"Quickly remove some big performance bottlenecks with QuickPerf","talkId":44151},{"id":26954,"fromDate":"2019-11-05T16:15:00Z","toDate":"2019-11-05T16:30:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1203,"roomName":"Exhibition Hall","sessionTypeId":26902,"sessionTypeName":"Break","sessionTypeDuration":15,"sessionTypeBreak":true,"audienceLevel":null,"langName":null,"timezone":"Europe/Brussels","trackId":null,"trackName":null,"trackImageURL":null,"speakers":null,"tags":null,"talkDescription":null,"talkTitle":null,"talkId":null},{"id":26596,"fromDate":"2019-11-05T16:30:00Z","toDate":"2019-11-05T17:00:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1211,"roomName":"Room 4","sessionTypeId":1254,"sessionTypeName":"Tools-in-Action","sessionTypeDuration":30,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1151","trackName":"Methodology & Culture","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/710ace39-49e0-4935-9734-7cda98204fa4.png","speakers":[{"id":24901,"firstName":"Andres","lastName":"Almiray","company":"Oracle"}],"tags":[{"name":"Gradle"},{"name":"build systems"},{"name":"Apache Maven"}],"talkDescription":"The Gradle Build Tool is quite powerful and flexible, perhaps too flexible if you ask around. Every where you turn you encounter custom builds with different conventions and arrangements. If only there was a way to follow a structure than ensures top-down constraints in a build. Well it turns out it's possible! Come learn how you and your organization can leverage the powerful features found in the Gradle Build Tool while at the same time reducing clutter and head-scratching moments.","talkTitle":"Gradle Ex Machina","talkId":45904},{"id":26598,"fromDate":"2019-11-05T16:30:00Z","toDate":"2019-11-05T17:00:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1202,"roomName":"Room 5","sessionTypeId":1254,"sessionTypeName":"Tools-in-Action","sessionTypeDuration":30,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1156","trackName":"Security","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/fab122c4-5e16-4e83-a3da-fad00870c886.png","speakers":[{"id":45701,"firstName":"Julien","lastName":"Garcia Gonzalez","company":"Giant Swarm"}],"tags":[{"name":"OSS"},{"name":"Kubernetes"},{"name":"security"}],"talkDescription":"Kubernetes is like an onion. Many layers. Each layer brings its own set of vulnerabilities; learning how to mitigate them is important. During this presentation you will learn how to analyze, scan, and fix your vulnerabilities, starting from the infrastructure and moving all the way up to the application runtime.","talkTitle":"A secure journey on Kubernetes","talkId":45452},{"id":26599,"fromDate":"2019-11-05T16:30:00Z","toDate":"2019-11-05T17:00:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1207,"roomName":"Room 6","sessionTypeId":1254,"sessionTypeName":"Tools-in-Action","sessionTypeDuration":30,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1154","trackName":"Java Language","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/f63a6ff7-0b15-4feb-b0fb-06aad848e601.png","speakers":[{"id":106401,"firstName":"Yishai","lastName":"Galatzer","company":"Amazon Web Services"}],"tags":[{"name":"JDK"},{"name":"OpenJDK"},{"name":"Corretto"}],"talkDescription":"In this session we will explore the journey of migrating major services from JDK 8 to JDK 11 using Amazon Corretto, Amazon's no-cost distribution of OpenJDK.\n \nWe will walk through the code and dependency changes required to migrate services to JDK 11, how we measured performance, and how we safely deployed such a significant update across multiple regions in production.","talkTitle":"Learnings from migrating a production service from JDK 8 to JDK 11","talkId":106451},{"id":26597,"fromDate":"2019-11-05T16:30:00Z","toDate":"2019-11-05T17:00:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1201,"roomName":"Room 8","sessionTypeId":1254,"sessionTypeName":"Tools-in-Action","sessionTypeDuration":30,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1159","trackName":"Cloud, Containers & Infrastructure","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/227114b5-6c72-4059-82ef-be9bf00ddd47.png","speakers":[{"id":45803,"firstName":"J√©r√©mie","lastName":"Drouet","company":"Docker"},{"id":45805,"firstName":"Guillaume","lastName":"Lours","company":"Docker Inc."}],"tags":[{"name":"Build Docker"},{"name":"Dockerfiles"},{"name":"Docker"}],"talkDescription":"From a Dockerfile taken \"randomly\" on Github, like a good old monolith, we will, by applying the best practices, transform this application into a set of reusable and understandable microservices.\n\nWe will start by externalizing the services used by our application using existing images and associating them in a Compose file.\n\nWe will optimize it by emptying the caches and removing unnecessary layers generated during the build of our application.\n\nWe will cut out the different build steps so that we do not have to keep the development dependencies in the final image\n\nWe will improve maintainability by using official images rather than manually installing our dependencies.\n\nWe will see how to avoid running our application as root.","talkTitle":"Dockerfile - the best practices","talkId":45907},{"id":26595,"fromDate":"2019-11-05T16:30:00Z","toDate":"2019-11-05T17:00:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1205,"roomName":"Room 9","sessionTypeId":1254,"sessionTypeName":"Tools-in-Action","sessionTypeDuration":30,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1152","trackName":"Programming languages","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/53f80769-d8be-4ae5-a731-d5591c97d2b4.png","speakers":[{"id":13861,"firstName":"Roland","lastName":"Weisleder","company":"data experts"}],"tags":[{"name":"Development Tools"},{"name":"best practices"},{"name":"Git"}],"talkDescription":"Software often lasts longer than expected. Software is also changing more often than expected. At some point, there comes a moment where a developer looks at the code and asks: ‚ÄúHow is this piece of code supposed to work?‚Äù A look into the git history is also not very helpful with messages like \"fixed some bugs\". This session will show some tips on how to create a comprehensible git history and what the benefits are. After this session, participants will know what to look for in their daily work with Git, and how they should use Git, so that changes to the code are still comprehensible months or years later.","talkTitle":"7 Tips to Pimp Your Git History","talkId":13911},{"id":26956,"fromDate":"2019-11-05T17:00:00Z","toDate":"2019-11-05T17:15:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1203,"roomName":"Exhibition Hall","sessionTypeId":26902,"sessionTypeName":"Break","sessionTypeDuration":15,"sessionTypeBreak":true,"audienceLevel":null,"langName":null,"timezone":"Europe/Brussels","trackId":null,"trackName":null,"trackImageURL":null,"speakers":null,"tags":null,"talkDescription":null,"talkTitle":null,"talkId":null},{"id":26601,"fromDate":"2019-11-05T17:15:00Z","toDate":"2019-11-05T17:45:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1211,"roomName":"Room 4","sessionTypeId":1254,"sessionTypeName":"Tools-in-Action","sessionTypeDuration":30,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1160","trackName":"Architecture","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/17c5c96d-cbfd-42ef-b715-13f1a05c5391.png","speakers":[{"id":45707,"firstName":"Robert","lastName":"Munteanu","company":"Adobe Systems"}],"tags":[{"name":"prometheus"},{"name":"Kubernetes"},{"name":"Docker"}],"talkDescription":"Microservices were born out of a need to enable modularity at a technical and business level. With their mass adoption tehnical patterns and solution have started to emerge, and management using Kubernetes is one of the most encountered.\n\nMonitoring application state becomes tedious when using approaches designed for individual servers and deployments. Prometheus and Grafana are cloud-native solutions that make monitoring of Kubernetes deployments a simple and very fruitful task.\n\nAfter this talk participants will understand how to instrument their applications, gather metrics and act on high-level aggregate information.","talkTitle":"Crash course in Kubernetes monitoring","talkId":45456},{"id":26602,"fromDate":"2019-11-05T17:15:00Z","toDate":"2019-11-05T17:45:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1202,"roomName":"Room 5","sessionTypeId":1254,"sessionTypeName":"Tools-in-Action","sessionTypeDuration":30,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1158","trackName":"Mind the Geek","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/0bac192f-aa3c-4288-bad0-4dd4abdbbdc1.png","speakers":[{"id":49503,"firstName":"Jan-Peter","lastName":"Sanderman","company":"Twict"}],"tags":[{"name":"Java"},{"name":"Spring Boot"},{"name":"Raspberry Pi"},{"name":"Python"},{"name":"Pi4J"},{"name":"IoT"}],"talkDescription":"For a client of ours we build a next level escaperoom / fort boyard experience and called it: Beat the Matrix. We run a fully automated and distributed game on 60+ Raspberry Pi's, 15 Arduino's, lots of sensors and actuators, and a couple of PCs to do the VR and AR work. 32 people can play at the same time, with only 1 attendant, making in commercially attractive. This talk will be about how we built the Matrix and our lessons learned, with the main focus on the hardware part. Java and Spring Boot are used for running the software. And yes, we got a CI/CD pipeline in place. Nothing fancy here. But when it comes to hardware (and we made lots of it ourselves), there is a lot to learn and discover (when you only have a software development background just like us)! Where to start? Are you going to use a Raspberry Pi, an Arduino or something else? What's the difference? And is it really that easy to get your first LED blinking? Or is there some stuff you need to take into account? And how to continue? What if you want to scale up? How to control the GPIO pins using Java or Python? And what if you run out of GPIO pins? Come to my talk and I will get all these questions answered and get you started on hardware development or your first IoT project.","talkTitle":"Building the Matrix","talkId":49305},{"id":26604,"fromDate":"2019-11-05T17:15:00Z","toDate":"2019-11-05T17:45:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1207,"roomName":"Room 6","sessionTypeId":1254,"sessionTypeName":"Tools-in-Action","sessionTypeDuration":30,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1154","trackName":"Java Language","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/f63a6ff7-0b15-4feb-b0fb-06aad848e601.png","speakers":[{"id":49072,"firstName":"Oleg","lastName":"≈†elajev","company":"Oracle"}],"tags":[{"name":"GraalVM"},{"name":"performance"},{"name":"Containers"}],"talkDescription":"GraalVM is a high-performance polyglot runtime for dynamic, static, and native languages. One of the abilities of GraalVM is to compile Java programs ahead of time into native images that offer performance comparable to running on the JVM but have instant startup times and much lower runtime overhead. Generating native images is proven to work on real-world applications and improve their startup miraculously. In this session, you will learn how native images work and what is required to generate them and will look at several examples of compiling programs ahead of time and packaging them into minimal containers. You‚Äôll also see how to configure native image generation, use the autoconfiguration agent for reflection, proxies and alike, and make libraries support native images out of the box. ","talkTitle":"GraalVM native images explained","talkId":104405},{"id":26603,"fromDate":"2019-11-05T17:15:00Z","toDate":"2019-11-05T17:45:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1201,"roomName":"Room 8","sessionTypeId":1254,"sessionTypeName":"Tools-in-Action","sessionTypeDuration":30,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1159","trackName":"Cloud, Containers & Infrastructure","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/227114b5-6c72-4059-82ef-be9bf00ddd47.png","speakers":[{"id":50583,"firstName":"Bowie","lastName":"Brotosumpeno","company":"Egencia"},{"id":50585,"firstName":"Xavier","lastName":"Thery","company":"Egencia Europe"}],"tags":[{"name":"testing"},{"name":"DevOps"},{"name":"delivery pipeline"},{"name":"REST API"},{"name":"NPM"}],"talkDescription":"Postman is a tool that allows users to simply and quickly call APIs. Its intuitive interface, the ability to save and share query collections, as well as various other features have made this tool very popular among developers. What you may not know is that Postman now has a CLI companion called Newman. Newman is an open-source command-line client for launching Postman collections. The integration of Postman collections into the CICD then became possible.\n\nIn this session, we will show you how to create a Postman collection from an Open API specification for use in a CICD process with Newman. We will cover the techniques to treat different use cases such as synchronous call, asynchronous call, workflow, etc. Finally, Newman is also a nodejs library, which opens the possibilities of extension and customization. Coming out of this conference, you will see Postman in a different way because, in addition to being an excellent tool to manually test APIs, now it allows you to reuse your already created collections in your CICD.","talkTitle":"Postman & Newman for your CICD","talkId":51417},{"id":26600,"fromDate":"2019-11-05T17:15:00Z","toDate":"2019-11-05T17:45:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1205,"roomName":"Room 9","sessionTypeId":1254,"sessionTypeName":"Tools-in-Action","sessionTypeDuration":30,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1152","trackName":"Programming languages","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/53f80769-d8be-4ae5-a731-d5591c97d2b4.png","speakers":[{"id":38201,"firstName":"Bouke","lastName":"Nijhuis","company":"CINQ ICT"}],"tags":[{"name":"Spock"},{"name":"JUnit 5"},{"name":"Unit Testing"}],"talkDescription":"In my humble opinion Spock is a better tool for unit testing than JUnit. The presentation will give several examples to support this opinion. It will show you the areas where Spock shines. To be honest there are also things that JUnit does beter, so there will be time for that as well. Finally I will show (with a little live coding) how simple and effortless one can start testing with Spock. At the end of this session everybody should be able to write their own Spock tests and more importantly everybody will be eager to try it!","talkTitle":"Why I prefer Spock over JUnit","talkId":38154},{"id":26958,"fromDate":"2019-11-05T17:45:00Z","toDate":"2019-11-05T18:00:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1203,"roomName":"Exhibition Hall","sessionTypeId":26902,"sessionTypeName":"Break","sessionTypeDuration":15,"sessionTypeBreak":true,"audienceLevel":null,"langName":null,"timezone":"Europe/Brussels","trackId":null,"trackName":null,"trackImageURL":null,"speakers":null,"tags":null,"talkDescription":null,"talkTitle":null,"talkId":null},{"id":26606,"fromDate":"2019-11-05T18:00:00Z","toDate":"2019-11-05T19:00:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1210,"roomName":"BOF 1","sessionTypeId":1252,"sessionTypeName":"BOF","sessionTypeDuration":60,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1154","trackName":"Java Language","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/f63a6ff7-0b15-4feb-b0fb-06aad848e601.png","speakers":[{"id":21051,"firstName":"Simon","lastName":"Ritter","company":"Azul Systems"}],"tags":[{"name":"JDK"},{"name":"Java"},{"name":"OpenJDK"}],"talkDescription":"Choosing which Java runtime to deploy used to be simple: for most people, it was the de facto default Oracle JDK.  For those with more demanding performance requirements, the options were Zing from Azul or possibly J9 from IBM.\n\nToday, things are very different. The license for the Oracle JDK changed with the release of JDK 11, meaning to use it in production requires a paid Java SE subscription.  To address the needs of Java developers, there are now a number of choices for the Java runtime, all in some way based on the OpenJDK source code.\n\nHow do you decide what distribution is right for your situation?\n\nIn this BoF, we'll have representatives from different JDK providers to help you make a choice of JDK.  We'll start with some introduction and discussion of things like update delivery, backporting fixes and TCK testing.  We'll then have a Q&A session where the audience can ask questions to get a clear understanding of what different distributions offer.","talkTitle":"Choosing a JDK: Ask the Distributors","talkId":21103},{"id":26605,"fromDate":"2019-11-05T18:00:00Z","toDate":"2019-11-05T19:00:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1206,"roomName":"BOF 2","sessionTypeId":1252,"sessionTypeName":"BOF","sessionTypeDuration":60,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1155","trackName":"Server Side Java","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/698b503d-9578-48da-85a9-bdf8ba942e3a.png","speakers":[{"id":18651,"firstName":"Emily","lastName":"Jiang","company":"IBM"},{"id":50568,"firstName":"Graham","lastName":"Charters","company":"IBM"},{"id":20104,"firstName":"Ivar","lastName":"Grimstad","company":"Eclipse Foundation"}],"tags":[{"name":"JakartaEE"},{"name":"community"},{"name":"BoF"}],"talkDescription":"An informal Jakarta EE community gathering of like minded developers, specification leads ,and Jakarta EE representatives from different companies.  Last year's BOF was very well attended and generated many good ideas which we took forward to the governing community.  Come, meet, and interact with many of the Jakarta EE participants in the industry.","talkTitle":"Jakarta EE Community BOF","talkId":43451},{"id":115257,"fromDate":"2019-11-05T19:00:00Z","toDate":"2019-11-05T20:00:00Z","overflow":false,"reserved":false,"remark":null,"roomId":1210,"roomName":"BOF 1","sessionTypeId":1252,"sessionTypeName":"BOF","sessionTypeDuration":60,"sessionTypeBreak":false,"audienceLevel":"BEGINNER","langName":null,"timezone":"Europe/Brussels","trackId":"1160","trackName":"Architecture","trackImageURL":"https://s3-eu-west-1.amazonaws.com/voxxeddays/webapp/images/17c5c96d-cbfd-42ef-b715-13f1a05c5391.png","speakers":[{"id":24901,"firstName":"Andres","lastName":"Almiray","company":"Oracle"}],"tags":[{"name":"methodology"},{"name":"Documentation BOF"},{"name":"Tools"},{"name":"documentation"},{"name":"best practices"},{"name":"trends"}],"talkDescription":"People often say documentation is boring. But not us!\n\nLet‚Äôs talk about documentation. How do you write it? How do you publish it? What tools do you use? What are the current trends? How do you encourage other people to participate? How can we make documentation more approachable?\n\nLet‚Äôs share ways to improve our documentation and to encourage others to love, appreciate, and value documentation as much as we do.","talkTitle":"Writers Write: The Documentation BOF","talkId":52351}]